swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: query
          name: accountId
          required: true
          type: string
          description: ID of the account
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: query
          name: accountId
          required: true
          type: string
          description: ID of the account
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: query
          name: accountId
          required: true
          type: string
          description: ID of the account
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/UserProfileResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: query
          name: accountId
          required: true
          type: string
          description: ID of the account
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile updated successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /transactions/{accountId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Retrieve transactions
      description: API endpoint for retrieving all transactions for the current month, grouped by account
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: ID of the account to retrieve transactions for
      produces:
        - application/json
      responses:
        "200":
          description: Transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: "#/definitions/TransactionSummary"
        "400":
          description: Invalid request parameters
        "500":
          description: Internal Server Error
  /transactions/{accountId}/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Transaction Details
      description: API endpoint for retrieving the details of a specific transaction
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: ID of the account
        - in: path
          name: transactionId
          required: true
          type: string
          description: ID of the transaction to retrieve details for
      produces:
        - application/json
      responses:
        "200":
          description: Transaction details retrieved successfully
          schema:
            $ref: "#/definitions/TransactionDetails"
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
  /transactions/{accountId}/{transactionId}/note-category:
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Update Transaction Note and Category
      description: API endpoint for updating the note and category of a specific transaction
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: ID of the account
        - in: path
          name: transactionId
          required: true
          type: string
          description: ID of the transaction to update
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              category:
                type: string
              note:
                type: string
      produces:
        - application/json
      responses:
        "200":
          description: Transaction note and category updated successfully
          schema:
            $ref: "#/definitions/TransactionDetails"
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
definitions:
  Login:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
      accountId:
        type: string
  ApiResponse:
    type: object
    properties:
      message:
        type: string
  User:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      email:
        type: string
  UserProfile:
    type: object
    properties:
      username:
        type: string
      email:
        type: string
  UserProfileResponse:
    type: object
    properties:
      username:
        type: string
      email:
        type: string
      balance:
        type: number
  TransactionSummary:
    type: object
    properties:
      date:
        type: string
        format: date-time
      description:
        type: string
      amount:
        type: number
      balance:
        type: number
  TransactionDetails:
    type: object
    properties:
      date:
        type: string
        format: date-time
      description:
        type: string
      amount:
        type: number
      balance:
        type: number
      category:
        type: string
      note:
        type: string
  TransactionCategoryUpdate:
    type: object
    properties:
      category:
        type: string
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header